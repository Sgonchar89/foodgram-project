# Generated by Django 2.2.6 on 2021-12-08 00:39

import colorfield.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0004_auto_20211129_1408'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='cart',
            options={'verbose_name': 'Shopping cart', 'verbose_name_plural': 'Shopping carts'},
        ),
        migrations.AlterModelOptions(
            name='comment',
            options={'ordering': ('-pub_date',), 'verbose_name': 'Comment', 'verbose_name_plural': 'Comments'},
        ),
        migrations.AlterModelOptions(
            name='favourite',
            options={'verbose_name': 'Favourite', 'verbose_name_plural': 'Favourites'},
        ),
        migrations.AlterModelOptions(
            name='follow',
            options={'verbose_name': 'Subscription', 'verbose_name_plural': 'Subscriptions'},
        ),
        migrations.AlterModelOptions(
            name='ingredient',
            options={'verbose_name': 'Ingredient', 'verbose_name_plural': 'Ingredients'},
        ),
        migrations.AlterModelOptions(
            name='recipe',
            options={'ordering': ['-pub_date'], 'verbose_name': 'Recipe', 'verbose_name_plural': 'Recipes'},
        ),
        migrations.AlterModelOptions(
            name='tag',
            options={'verbose_name': 'Tag', 'verbose_name_plural': 'Tags'},
        ),
        migrations.AlterField(
            model_name='cart',
            name='recipe',
            field=models.ForeignKey(help_text='Select a recipe', on_delete=django.db.models.deletion.CASCADE, related_name='to_cart', to='api.Recipe', verbose_name='Recipe'),
        ),
        migrations.AlterField(
            model_name='cart',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_cart', to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='author',
            field=models.ForeignKey(help_text='Select an author', on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL, verbose_name='Author'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='pub_date',
            field=models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Comment date'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='recipe',
            field=models.ForeignKey(help_text='Select a recipe', on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='api.Recipe', verbose_name='Recipe'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='text',
            field=models.TextField(help_text='Enter your comment', verbose_name='Comment'),
        ),
        migrations.AlterField(
            model_name='favourite',
            name='recipe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favourites', to='api.Recipe', verbose_name='Recipe'),
        ),
        migrations.AlterField(
            model_name='favourite',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favourites', to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.AlterField(
            model_name='follow',
            name='author',
            field=models.ForeignKey(help_text='Author', on_delete=django.db.models.deletion.CASCADE, related_name='following', to=settings.AUTH_USER_MODEL, verbose_name='Author'),
        ),
        migrations.AlterField(
            model_name='follow',
            name='user',
            field=models.ForeignKey(help_text='Follower', on_delete=django.db.models.deletion.CASCADE, related_name='follower', to=settings.AUTH_USER_MODEL, verbose_name='Follower'),
        ),
        migrations.AlterField(
            model_name='ingredient',
            name='measurement_unit',
            field=models.CharField(help_text='Enter the measurement unit of the ingredient', max_length=200, verbose_name='Measurement unit'),
        ),
        migrations.AlterField(
            model_name='ingredient',
            name='name',
            field=models.CharField(help_text='Enter ingredient name', max_length=200, verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='ingredientsamount',
            name='amount',
            field=models.IntegerField(help_text='Enter the amount', validators=[django.core.validators.MinValueValidator(limit_value=1, message='Quantity must be at least 1.')], verbose_name='Amount'),
        ),
        migrations.AlterField(
            model_name='ingredientsamount',
            name='ingredient',
            field=models.ForeignKey(help_text='Select ingredients', on_delete=django.db.models.deletion.CASCADE, to='api.Ingredient', verbose_name='Ingredient'),
        ),
        migrations.AlterField(
            model_name='ingredientsamount',
            name='recipe',
            field=models.ForeignKey(help_text='Select recipe', on_delete=django.db.models.deletion.CASCADE, related_name='ingredient_amount', to='api.Recipe', verbose_name='Recipe'),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipes', to=settings.AUTH_USER_MODEL, verbose_name='Author'),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='cooking_time',
            field=models.PositiveSmallIntegerField(help_text='Enter cooking time in minutes.', validators=[django.core.validators.MinValueValidator(limit_value=1, message='Cooking time should be at least 1.')], verbose_name='Cooking time in minutes.'),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='image',
            field=models.ImageField(blank=True, null=True, upload_to='recipes/', verbose_name='Image'),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='ingredients',
            field=models.ManyToManyField(help_text='Select ingredients', related_name='recipes', through='api.IngredientsAmount', to='api.Ingredient', verbose_name='Ingredients'),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='name',
            field=models.CharField(max_length=200, verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='pub_date',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Publication date'),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='tags',
            field=models.ManyToManyField(help_text='Select tags', to='api.Tag', verbose_name='Tags'),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='text',
            field=models.TextField(help_text='Enter recipe description', verbose_name='Description'),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='who_likes_it',
            field=models.ManyToManyField(blank=True, related_name='favourite_recipes', to=settings.AUTH_USER_MODEL, verbose_name='Who liked it'),
        ),
        migrations.AlterField(
            model_name='tag',
            name='color',
            field=colorfield.fields.ColorField(default='#888888', help_text='Select the HEX color code (example: #49B64E)', max_length=200, validators=[django.core.validators.RegexValidator(message='The color must be specified in HEX-code format', regex='#[0-9a-fA-F]{6}')], verbose_name='Color'),
        ),
        migrations.AlterField(
            model_name='tag',
            name='name',
            field=models.CharField(help_text='Enter tag name', max_length=200, unique=True, verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='tag',
            name='slug',
            field=models.SlugField(unique=True, verbose_name='Link'),
        ),
    ]
